[{"G:\\react\\reviews\\src\\index.js":"1","G:\\react\\reviews\\src\\reportWebVitals.js":"2","G:\\react\\reviews\\src\\App.js":"3","G:\\react\\reviews\\src\\component\\Form.jsx":"4","G:\\react\\reviews\\src\\component\\LoginFormValidationRules.jsx":"5","G:\\react\\reviews\\src\\component\\useForm.jsx":"6","G:\\react\\reviews\\src\\component\\Display.jsx":"7","G:\\react\\reviews\\src\\component\\Api.jsx":"8","G:\\react\\reviews\\src\\component\\Rating.jsx":"9"},{"size":548,"mtime":1611077562145,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":197,"mtime":1611064372264,"results":"13","hashOfConfig":"11"},{"size":2097,"mtime":1610734983511,"results":"14","hashOfConfig":"11"},{"size":1205,"mtime":1610744059290,"results":"15","hashOfConfig":"11"},{"size":771,"mtime":1610799026917,"results":"16","hashOfConfig":"11"},{"size":375,"mtime":1611064326779,"results":"17","hashOfConfig":"11"},{"size":1489,"mtime":1611078846707,"results":"18","hashOfConfig":"11"},{"size":300349,"mtime":1611336576919,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"152dxt7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\react\\reviews\\src\\index.js",[],["43","44"],"G:\\react\\reviews\\src\\reportWebVitals.js",[],"G:\\react\\reviews\\src\\App.js",[],"G:\\react\\reviews\\src\\component\\Form.jsx",["45","46"],"import React from 'react';\r\nimport useForm from \"./useForm\";\r\nimport validate from './LoginFormValidationRules';\r\nimport {Form, FormControl, FormInput, Button} from 'react-bootstrap';\r\n\r\nconst Forms = () => {\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n  } = useForm(login, validate);\r\n\r\n  function login() {\r\n    console.log('No errors, submit callback called!');\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"form-content-right\">\r\n    <Form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n\r\n\r\n    <Form.Group controlId=\"fullname\" >\r\n            <Form.Label htmlFor=\"fullname\">Fullname</Form.Label> \r\n            <Form.Control className={`input ${errors.fullname && 'is-danger'}`} type=\"text\" name=\"fullname\" onChange={handleChange} value={values.fullname || ''} required  placeholder=\"Eg: Mark Doe\" />\r\n            {errors.fullname && (\r\n                    <p className=\"help is-danger\">{errors.fullname}</p>\r\n                  )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\" >\r\n            <Form.Label htmlFor=\"email\">Email</Form.Label> \r\n            <Form.Control className={`input ${errors.email && 'is-danger'}`} type=\"email\" name=\"email\" onChange={handleChange} value={values.email || ''} required  placeholder=\"Eg: markdoe@gmail.com\" />\r\n            {errors.email && (\r\n                    <p className=\"help is-danger\">{errors.email}</p>\r\n                  )}\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId=\"message\">\r\n                <Form.Label htmlFor=\"message\">Message</Form.Label> \r\n                <Form.Control id=\"message\" as=\"textarea\" rows={3} className={`input ${errors.message && 'is-danger'}`} type=\"text\" name=\"message\" onChange={handleChange} value={values.message || ''} required   placeholder=\"Eg: Subject\" />\r\n                {errors.message && (\r\n                    <p className=\"help is-danger\">{errors.message}</p>\r\n                  )}\r\n            </Form.Group>\r\n\r\n       \r\n        <Button type=\"submit\">Submit</Button>\r\n    \r\n    </Form>\r\n</div>\r\n\r\n\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default Forms;",["47","48"],"G:\\react\\reviews\\src\\component\\LoginFormValidationRules.jsx",[],"G:\\react\\reviews\\src\\component\\useForm.jsx",["49"],"import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\nexport default useForm;","G:\\react\\reviews\\src\\component\\Display.jsx",[],["50","51"],"G:\\react\\reviews\\src\\component\\Api.jsx",[],"G:\\react\\reviews\\src\\component\\Rating.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":15,"nodeType":"58","messageId":"59","endLine":4,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":4,"column":28,"nodeType":"58","messageId":"59","endLine":4,"endColumn":37},{"ruleId":"52","replacedBy":"61"},{"ruleId":"54","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":13,"column":6,"nodeType":"65","endLine":13,"endColumn":14,"suggestions":"66"},{"ruleId":"52","replacedBy":"67"},{"ruleId":"54","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'FormInput' is defined but never used.",["69"],["70"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["71"],["69"],["70"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"74","text":"75"},[358,366],"[callback, errors, isSubmitting]"]